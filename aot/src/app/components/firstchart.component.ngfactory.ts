/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/components/firstchart.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import9 from '../../../node_modules/@angular/forms/src/directives/radio_control_value_accessor.ngfactory';
import * as import10 from '../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@angular/core/src/change_detection/change_detection_util';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import16 from '@angular/forms/src/directives/default_value_accessor';
import * as import17 from '@angular/forms/src/directives/control_value_accessor';
import * as import18 from '@angular/forms/src/directives/ng_model';
import * as import19 from '@angular/forms/src/directives/ng_control';
import * as import20 from '@angular/forms/src/directives/ng_control_status';
import * as import21 from '../../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import22 from '../../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import23 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import24 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import25 from '../../../node_modules/ng2-charts/charts/charts.ngfactory';
import * as import26 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import27 from '@angular/core/src/linker/template_ref';
import * as import28 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import29 from 'ng2-charts/charts/charts';
import * as import30 from '@angular/common/src/directives/ng_for';
export class Wrapper_FirstChartComponent {
  /*private*/ _eventHandler:Function;
  context:import0.FirstChartComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FirstChartComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FirstChartComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FirstChartComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FirstChartComponent>;
  _FirstChartComponent_0_3:Wrapper_FirstChartComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FirstChartComponent_Host0,renderType_FirstChartComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'firstchart',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FirstChartComponent0(this.viewUtils,this,0,this._el_0);
    this._FirstChartComponent_0_3 = new Wrapper_FirstChartComponent();
    this.compView_0.create(this._FirstChartComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FirstChartComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FirstChartComponent) && (0 === requestNodeIndex))) { return this._FirstChartComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FirstChartComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FirstChartComponentNgFactory:import7.ComponentFactory<import0.FirstChartComponent> = new import7.ComponentFactory<import0.FirstChartComponent>('firstchart',View_FirstChartComponent_Host0,import0.FirstChartComponent);
const styles_FirstChartComponent:any[] = ([] as any[]);
class View_FirstChartComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _DefaultValueAccessor_2_3:import8.Wrapper_DefaultValueAccessor;
  _RadioControlValueAccessor_2_4:import9.Wrapper_RadioControlValueAccessor;
  _NG_VALUE_ACCESSOR_2_5:any[];
  _NgModel_2_6:import10.Wrapper_NgModel;
  _NgControl_2_7:any;
  _NgControlStatus_2_8:import11.Wrapper_NgControlStatus;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  /*private*/ _expr_12:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_FirstChartComponent1,renderType_FirstChartComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_12 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','options'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n       ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(6,'class','opt','name','gender_1','type','radio'),(null as any));
    this._DefaultValueAccessor_2_3 = new import8.Wrapper_DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_2));
    this._RadioControlValueAccessor_2_4 = new import9.Wrapper_RadioControlValueAccessor(this.renderer,new import14.ElementRef(this._el_2),this.parentView.parentView.injectorGet(import15.RadioControlRegistry,this.parentView.parentIndex),this.injector(2));
    this._NG_VALUE_ACCESSOR_2_5 = [
      this._DefaultValueAccessor_2_3.context,
      this._RadioControlValueAccessor_2_4.context
    ]
    ;
    this._NgModel_2_6 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_2_5);
    this._NgControl_2_7 = this._NgModel_2_6.context;
    this._NgControlStatus_2_8 = new import11.Wrapper_NgControlStatus(this._NgControl_2_7);
    this._text_3 = this.renderer.createText(this._el_0,'',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(8,'ngModelChange',(null as any),'change',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_2));
    this._NgModel_2_6.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DefaultValueAccessor) && (2 === requestNodeIndex))) { return this._DefaultValueAccessor_2_3.context; }
    if (((token === import15.RadioControlValueAccessor) && (2 === requestNodeIndex))) { return this._RadioControlValueAccessor_2_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (2 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_2_5; }
    if (((token === import18.NgModel) && (2 === requestNodeIndex))) { return this._NgModel_2_6.context; }
    if (((token === import19.NgControl) && (2 === requestNodeIndex))) { return this._NgControl_2_7; }
    if (((token === import20.NgControlStatus) && (2 === requestNodeIndex))) { return this._NgControlStatus_2_8.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_2_1_0:any = 'gender_1';
    this._RadioControlValueAccessor_2_4.check_name(currVal_2_1_0,throwOnChange,false);
    const currVal_2_1_1:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    this._RadioControlValueAccessor_2_4.check_value(currVal_2_1_1,throwOnChange,false);
    this._RadioControlValueAccessor_2_4.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_2_2_0:any = 'gender_1';
    this._NgModel_2_6.check_name(currVal_2_2_0,throwOnChange,false);
    const currVal_2_2_1:any = this.parentView.context.curr_gender;
    this._NgModel_2_6.check_model(currVal_2_2_1,throwOnChange,false);
    this._NgModel_2_6.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatus_2_8.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatus_2_8.checkHost(this,this,this._el_2,throwOnChange);
    const currVal_12:any = import3.inlineInterpolate(1,' ',this.context.$implicit,'');
    if (import3.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setText(this._text_3,currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  destroyInternal():void {
    this._RadioControlValueAccessor_2_4.ngOnDestroy();
    this._NgModel_2_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_2_3.handleEvent(eventName,$event) && result);
    result = (this._RadioControlValueAccessor_2_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.curr_gender = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'change')) {
      const pd_sub_1:any = ((<any>this.parentView.context.toggleGender(this.context.$implicit)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_FirstChartComponent2 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import21.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import22.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_FirstChartComponent2,renderType_FirstChartComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import21.Wrapper_NgSelectOption(new import14.ElementRef(this._el_0),this.renderer,(<View_FirstChartComponent0>this.parentView)._SelectControlValueAccessor_11_3.context);
    this._NgSelectMultipleOption_0_4 = new import22.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import24.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_FirstChartComponent3 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_FirstChartComponent3,renderType_FirstChartComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_6 = import13.UNINITIALIZED;
    this._expr_7 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','options'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n       ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray8(8,'checked','','class','opt','name','year_selection','type','checkbox'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n\n      ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementProperty(this._el_2,'value',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = import3.inlineInterpolate(1,' ',this.context.$implicit,'\n       ');
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setText(this._text_3,currVal_7);
      this._expr_7 = currVal_7;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.parentView.context.toggleYear(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_FirstChartComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FirstChartComponent,{});
export class View_FirstChartComponent0 extends import1.AppView<import0.FirstChartComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _BaseChartDirective_3_3:import25.Wrapper_BaseChartDirective;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import12.ViewContainer;
  _TemplateRef_8_5:any;
  _NgFor_8_6:import26.Wrapper_NgFor;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _SelectControlValueAccessor_11_3:import21.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_11_4:any[];
  _NgModel_11_5:import10.Wrapper_NgModel;
  _NgControl_11_6:any;
  _NgControlStatus_11_7:import11.Wrapper_NgControlStatus;
  _text_12:any;
  _el_13:any;
  _NgSelectOption_13_3:import21.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_13_4:import22.Wrapper_NgSelectMultipleOption;
  _text_14:any;
  _text_15:any;
  _anchor_16:any;
  /*private*/ _vc_16:import12.ViewContainer;
  _TemplateRef_16_5:any;
  _NgFor_16_6:import26.Wrapper_NgFor;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _anchor_21:any;
  /*private*/ _vc_21:import12.ViewContainer;
  _TemplateRef_21_5:any;
  _NgFor_21_6:import26.Wrapper_NgFor;
  _text_22:any;
  _text_23:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FirstChartComponent0,renderType_FirstChartComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'style','display: block; '),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'canvas',new import3.InlineArray2(2,'baseChart',''),(null as any));
    this._BaseChartDirective_3_3 = new import25.Wrapper_BaseChartDirective(new import14.ElementRef(this._el_3));
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n\n    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'style','display: block;'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_8 = new import12.ViewContainer(8,6,this,this._anchor_8);
    this._TemplateRef_8_5 = new import27.TemplateRef_(this,8,this._anchor_8);
    this._NgFor_8_6 = new import26.Wrapper_NgFor(this._vc_8.vcRef,this._TemplateRef_8_5,this.parentView.injectorGet(import28.IterableDiffers,this.parentIndex),this.ref);
    this._el_9 = import3.createRenderElement(this.renderer,this._el_6,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_10 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_6,'select',new import3.InlineArray2(2,'class','options opt'),(null as any));
    this._SelectControlValueAccessor_11_3 = new import21.Wrapper_SelectControlValueAccessor(this.renderer,new import14.ElementRef(this._el_11));
    this._NG_VALUE_ACCESSOR_11_4 = [this._SelectControlValueAccessor_11_3.context];
    this._NgModel_11_5 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_11_4);
    this._NgControl_11_6 = this._NgModel_11_5.context;
    this._NgControlStatus_11_7 = new import11.Wrapper_NgControlStatus(this._NgControl_11_6);
    this._text_12 = this.renderer.createText(this._el_11,'\n      ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_11,'option',new import3.InlineArray4(4,'disabled','','value',''),(null as any));
    this._NgSelectOption_13_3 = new import21.Wrapper_NgSelectOption(new import14.ElementRef(this._el_13),this.renderer,this._SelectControlValueAccessor_11_3.context);
    this._NgSelectMultipleOption_13_4 = new import22.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_13),this.renderer,(null as any));
    this._text_14 = this.renderer.createText(this._el_13,' Age ',(null as any));
    this._text_15 = this.renderer.createText(this._el_11,'\n          ',(null as any));
    this._anchor_16 = this.renderer.createTemplateAnchor(this._el_11,(null as any));
    this._vc_16 = new import12.ViewContainer(16,11,this,this._anchor_16);
    this._TemplateRef_16_5 = new import27.TemplateRef_(this,16,this._anchor_16);
    this._NgFor_16_6 = new import26.Wrapper_NgFor(this._vc_16.vcRef,this._TemplateRef_16_5,this.parentView.injectorGet(import28.IterableDiffers,this.parentIndex),this.ref);
    this._text_17 = this.renderer.createText(this._el_11,'\n      ',(null as any));
    this._text_18 = this.renderer.createText(this._el_6,' ',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_6,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_20 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._anchor_21 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_21 = new import12.ViewContainer(21,6,this,this._anchor_21);
    this._TemplateRef_21_5 = new import27.TemplateRef_(this,21,this._anchor_21);
    this._NgFor_21_6 = new import26.Wrapper_NgFor(this._vc_21.vcRef,this._TemplateRef_21_5,this.parentView.injectorGet(import28.IterableDiffers,this.parentIndex),this.ref);
    this._text_22 = this.renderer.createText(this._el_6,'\n    ',(null as any));
    this._text_23 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray8(6,'change',(null as any),'ngModelChange',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_11));
    this._NgModel_11_5.subscribe(this,this.eventHandler(this.handleEvent_11),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._anchor_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._anchor_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._anchor_21,
      this._text_22,
      this._text_23
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import29.BaseChartDirective) && (3 === requestNodeIndex))) { return this._BaseChartDirective_3_3.context; }
    if (((token === import27.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import30.NgFor) && (8 === requestNodeIndex))) { return this._NgFor_8_6.context; }
    if (((token === import23.NgSelectOption) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgSelectOption_13_3.context; }
    if (((token === import24.NgSelectMultipleOption) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgSelectMultipleOption_13_4.context; }
    if (((token === import27.TemplateRef) && (16 === requestNodeIndex))) { return this._TemplateRef_16_5; }
    if (((token === import30.NgFor) && (16 === requestNodeIndex))) { return this._NgFor_16_6.context; }
    if (((token === import23.SelectControlValueAccessor) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._SelectControlValueAccessor_11_3.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NG_VALUE_ACCESSOR_11_4; }
    if (((token === import18.NgModel) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgModel_11_5.context; }
    if (((token === import19.NgControl) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgControl_11_6; }
    if (((token === import20.NgControlStatus) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgControlStatus_11_7.context; }
    if (((token === import27.TemplateRef) && (21 === requestNodeIndex))) { return this._TemplateRef_21_5; }
    if (((token === import30.NgFor) && (21 === requestNodeIndex))) { return this._NgFor_21_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.barChartData;
    this._BaseChartDirective_3_3.check_datasets(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = this.context.barChartLabels;
    this._BaseChartDirective_3_3.check_labels(currVal_3_0_1,throwOnChange,false);
    const currVal_3_0_2:any = this.context.barChartOptions;
    this._BaseChartDirective_3_3.check_options(currVal_3_0_2,throwOnChange,false);
    const currVal_3_0_3:any = this.context.barChartType;
    this._BaseChartDirective_3_3.check_chartType(currVal_3_0_3,throwOnChange,false);
    const currVal_3_0_4:any = this.context.barChartColors;
    this._BaseChartDirective_3_3.check_colors(currVal_3_0_4,throwOnChange,false);
    const currVal_3_0_5:any = this.context.barChartLegend;
    this._BaseChartDirective_3_3.check_legend(currVal_3_0_5,throwOnChange,false);
    this._BaseChartDirective_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_8_0_0:any = this.context.genders;
    this._NgFor_8_6.check_ngForOf(currVal_8_0_0,throwOnChange,false);
    this._NgFor_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    this._SelectControlValueAccessor_11_3.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_1_0:any = this.context.curr_age;
    this._NgModel_11_5.check_model(currVal_11_1_0,throwOnChange,false);
    this._NgModel_11_5.ngDoCheck(this,this._el_11,throwOnChange);
    this._NgControlStatus_11_7.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_13_0_0:any = '';
    this._NgSelectOption_13_3.check_value(currVal_13_0_0,throwOnChange,false);
    this._NgSelectOption_13_3.ngDoCheck(this,this._el_13,throwOnChange);
    const currVal_13_1_0:any = '';
    this._NgSelectMultipleOption_13_4.check_value(currVal_13_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_13_4.ngDoCheck(this,this._el_13,throwOnChange);
    const currVal_16_0_0:any = this.context.ages;
    this._NgFor_16_6.check_ngForOf(currVal_16_0_0,throwOnChange,false);
    this._NgFor_16_6.ngDoCheck(this,this._anchor_16,throwOnChange);
    const currVal_21_0_0:any = this.context.years;
    this._NgFor_21_6.check_ngForOf(currVal_21_0_0,throwOnChange,false);
    this._NgFor_21_6.ngDoCheck(this,this._anchor_21,throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_16.detectChangesInNestedViews(throwOnChange);
    this._vc_21.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatus_11_7.checkHost(this,this,this._el_11,throwOnChange);
  }
  destroyInternal():void {
    this._vc_8.destroyNestedViews();
    this._vc_16.destroyNestedViews();
    this._vc_21.destroyNestedViews();
    this._BaseChartDirective_3_3.ngOnDestroy();
    this._NgSelectOption_13_3.ngOnDestroy();
    this._NgSelectMultipleOption_13_4.ngOnDestroy();
    this._NgModel_11_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 8)) { return new View_FirstChartComponent1(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 16)) { return new View_FirstChartComponent2(this.viewUtils,this,16,this._anchor_16,this._vc_16); }
    if ((nodeIndex == 21)) { return new View_FirstChartComponent3(this.viewUtils,this,21,this._anchor_21,this._vc_21); }
    return (null as any);
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SelectControlValueAccessor_11_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.context.toggleAge($event.target.value)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>(this.context.curr_age = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}